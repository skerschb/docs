arg_name: param
description: |
  The selection criteria for the update. The same :ref:`query
  selectors <query-selectors>` as in the :method:`find()
  <db.collection.find()>` method are available.

  Specify an empty document ``{ }`` to update the first document returned in 
  the collection.

interface: method
name: filter
operation: db.collection.updateOne
optional: false
position: 1
type: document
---
arg_name: param
description: |
  The modifications to apply.
  
  Use :doc:`/reference/operator/update/` such as :update:`$set`, 
  :update:`$unset`, or :update:`$rename`.
  
  Using the :ref:`update() <update-parameter>` pattern of 
  ``field: value`` for the ``update`` parameter throws an error. 
  
interface: method
name: update
operation: db.collection.updateOne
optional: false
position: 2
type: document
---
arg_name: param
description: |
  .. include:: /includes/extracts/updateOne-behavior-method.rst
  
interface: method
name: upsert
operation: db.collection.updateOne
optional: false # Set to false w/ "Optional" in extract due to giza issue
position: 3
type: boolean
---
arg_name: param
description: |
  A document expressing the :doc:`write concern
  </reference/write-concern>`. Omit to use the default write concern.

  .. include:: /includes/extracts/transactions-operations-write-concern.rst

interface: method
name: writeConcern
operation: db.collection.updateOne
optional: true
position: 4
type: document
---
arg_name: param
name: collation
source:
  ref: collation
  file: apiargs-dbcommand-aggregate-field.yaml
interface: method
operation: db.collection.updateOne
position: 5
---
position: 6
name: arrayFilters
source:
  ref: arrayFilters
  file: apiargs-dbcommand-update-field-updates.yaml
post: |
   For examples, see :ref:`updateOne-arrayFilters`.

   .. versionadded:: 3.6

arg_name: param
interface: method
operation: db.collection.updateOne
...