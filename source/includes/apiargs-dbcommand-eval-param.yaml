arg_name: field
description: |-
  A JavaScript function.
interface: dbcommand
name: eval
operation: eval
optional: false
position: 1
type: function
---
arg_name: field
description: |-
  An array of arguments to pass to the JavaScript function. Omit if the function does not take arguments.
interface: dbcommand
name: args
operation: eval
optional: true
position: 2
type: array
---
arg_name: field
description: |
  By default, :dbcommand:`eval` takes a global write lock before
  evaluating the JavaScript function. As a result, :dbcommand:`eval`
  blocks all other read and write operations to the database while the
  :dbcommand:`eval` operation runs. Set ``nolock`` to ``true`` on the
  :dbcommand:`eval` command to prevent the :dbcommand:`eval` command
  from taking the global write lock before evaluating the
  JavaScript. ``nolock`` does not impact whether operations within the
  JavaScript code itself takes a write lock.
interface: dbcommand
name: nolock
operation: eval
optional: true
position: 3
type: boolean
...
