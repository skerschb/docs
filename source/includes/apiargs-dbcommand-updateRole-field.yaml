arg_name: field
description: |
  The name of the :ref:`user-defined role <user-defined-roles>` role to update.
interface: dbcommand
name: updateRole
operation: updateRole
optional: false
position: 1
type: string
---
arg_name: field
description: |
  Required if you do not specify :data:`~admin.system.roles.roles` array.
  The privileges to grant the role. An update to the ``privileges``
  array overrides the previous array's values. For the syntax for
  specifying a privilege, see the :data:`~admin.system.roles.privileges`
  array.
interface: dbcommand
name: privileges
operation: updateRole
optional: true
position: 2
type: array
---
arg_name: field
description: |
  Required if you do not specify :data:`~admin.system.roles.privileges` array.
  The roles from which this role inherits privileges. An update to the
  ``roles`` array overrides the previous array's values.
interface: dbcommand
name: roles
operation: updateRole
optional: true
position: 3
type: array
---
arg_name: field
description: |

  Optional.

  .. include:: /includes/fact-auth-restrictions-role-desc.rst

interface: dbcommand
name: authenticationRestrictions
operation: createRole
optional: false
position: 4
type: array
---
arg_name: field
description: |
  The level of :doc:`write concern </reference/write-concern>` for the
  update operation. The ``writeConcern`` document takes the same
  fields as the :dbcommand:`getLastError` command.
interface: dbcommand
name: writeConcern
operation: updateRole
optional: true
position: 5
type: document
...
