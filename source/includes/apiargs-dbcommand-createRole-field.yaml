arg_name: field
description: |
  The name of the new role.
interface: dbcommand
name: createRole
operation: createRole
optional: false
position: 1
type: string
---
arg_name: field
description: |
  The privileges to grant the role. A privilege consists of a resource
  and permitted actions. For the syntax of a privilege, see the
  :data:`~admin.system.roles.privileges` array.

  You must include the ``privileges`` field. Use an
  empty array to specify *no* privileges.
interface: dbcommand
name: privileges
operation: createRole
optional: false
position: 2
type: array
---
arg_name: field
description: |
  An array of roles from which this role inherits privileges.

  You must include the ``roles`` field. Use an empty array to specify
  *no* roles to inherit from.
interface: dbcommand
name: roles
operation: createRole
optional: false
position: 3
type: array
---
arg_name: field
description: |

   Optional.

   .. include:: /includes/fact-auth-restrictions-role-desc.rst

interface: dbcommand
name: authenticationRestrictions
operation: createRole
optional: false
position: 4
type: array
---
arg_name: field
description: |
  The level of :doc:`write concern </reference/write-concern>` to apply
  to this operation. The ``writeConcern`` document uses the same fields
  as the :dbcommand:`getLastError` command.
interface: dbcommand
name: writeConcern
operation: createRole
optional: true
position: 5
type: document
...
