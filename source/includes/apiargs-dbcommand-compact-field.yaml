arg_name: field
description: |
  The name of the collection.
interface: dbcommand
name: compact
operation: compact
optional: false
position: 1
type: string
---
arg_name: field
description: |
  If ``true``, :dbcommand:`compact` can run on the
  :term:`primary` in a :term:`replica set`. If ``false``,
  :dbcommand:`compact` returns an error when run on a
  primary, because the command blocks all other operations.

  :dbcommand:`compact` blocks operations only for the database
  it is compacting.
interface: dbcommand
name: force
operation: compact
optional: true
position: 2
type: boolean
---
arg_name: field
description: |
  *Applicable for the MMAPv1 storage engine only.* Specifies the
  padding to use (as a factor of the document size) during the
  :dbcommand:`compact` operation.

  The ``paddingFactor`` does not affect
  the padding of subsequent record allocations after
  :dbcommand:`compact` completes. For more information, see
  :ref:`compact-paddingFactor`.
interface: dbcommand
name: paddingFactor
operation: compact
optional: true
position: 3
type: number
---
arg_name: field
description: |
  *Applicable for the MMAPv1 storage engine only.* Specifies the
  padding to use (in absolute number of bytes) during the
  :dbcommand:`compact` operation.

  ``paddingBytes`` does not affect
  the padding of subsequent record allocations after
  :dbcommand:`compact` completes. For more information, see
  :ref:`compact-paddingBytes`.
interface: dbcommand
name: paddingBytes
operation: compact
optional: true
position: 4
type: integer
---
arg_name: field
description: |
  *Applicable for the MMAPv1 storage engine only.* Specifies that the
  :dbcommand:`compact` process should leave document :term:`padding` intact.

  This option cannot be used with ``paddingFactor`` or ``paddingBytes``.

  .. versionadded:: 2.6
interface: dbcommand
name: preservePadding
operation: compact
optional: true
type: boolean
...
